---
title: "Atlas data summary"
format: 
  html:
    code-fold: true
execute: 
  cache: true
---

Load packages

```{r}
#| label: pkgs
#| message: false
library(finbif, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(plotly, quietly = TRUE)
options(finbif_hide_progress = TRUE)
```

Set filters for complete lists of birds only.

```{r}
#| label: filters
filters <- list(
  complete_list_type = "all_species",
  complete_list_taxon_id = taxon_id("birds")
)
```

Get the number of complete lists submitted over time.

```{r}
#| label: complete-lists-per-day
complete_lists_per_day <- fb_occurrence(
  filter = filters,
  select = c("year", Day = "ordinal_day_start"),
  aggregate = "event",
  n = "all"
)
```

Plot the number of complete lists submitted over time in 2022.

```{r}
#| label: fig-complete-lists-over-time
#| fig-height: 8
#| fig-cap: "Number of complete lists submitted over time in 2022"
complete_lists_per_day |>
  filter(year == 2022) |>
  arrange(Day) |>
  mutate(Lists = cumsum(n_events)) |>
  ggplot() +
  aes(x = Day, y = Lists) +
  geom_line()
```

Get the number of complete lists per 10km grid cell.

```{r}
#| label: complete-lists-per-grid-cell
complete_lists_per_grid_cell <- fb_occurrence(
  filter = filters,
  select = c("lon_10_ykj", "lat_10_ykj", "year"),
  aggregate = "event",
  n = "all"
)
```

Plot the number of complete lists per grid cell.

```{r}
#| label: fig-complete-lists
#| fig-height: 8
#| fig-cap: "Number of complete lists per 10km grid cell."
ggplot(complete_lists_per_grid_cell) +
aes(lon_10_ykj, lat_10_ykj, fill = n_events) +
scale_fill_viridis_c(
  name = "Complete\nLists", trans = 'log', breaks = c(1, 10, 50, 500),
) +
geom_tile() +
xlab("Longitude (YKJ)") +
ylab("Latitude (YKJ)")
```

Get the observed breeding taxa

```{r}
#| label: complete-list-taxa
taxa <- fb_occurrence(
  "Birds",
  filter = filters,
  select = c(Taxa = "birdlife_code"),
  aggregate = "records",
  aggregate_counts = FALSE,
  n = "all"
)
```

Get the number of complete lists per week removing lists that end in a different week than they began in.

```{r}
#| label: complete-lists-per-week
complete_lists_per_week <-
  fb_occurrence(
    filter = filters,
    select = c("date_start", "date_end", "year"),
    aggregate = "event",
    n = "all"
  ) |>
  transform(
    week = format(as.Date(date_start), "%W"),
    end_week = format(as.Date(date_end), "%W")
  ) |>
  subset(week == end_week) |>
  aggregate(n_events ~ week + year, data = _, sum)
```

Get the weekly reporting rate for each taxa.

```{r}
#| label: reporting-rates
reporting_rates <-
  fb_occurrence(
    "Birds",
    filter = filters,
    select = c("date_start", "date_end", Taxa = "birdlife_code", "year"),
    aggregate = "records",
    n = "all"
  ) |>
  transform(
    week = format(as.Date(date_start), "%W"),
    end_week = format(as.Date(date_end), "%W")
  ) |>
  subset(week == end_week) |>
  aggregate(n_records ~ week + Taxa + year, data = _, sum) |>
  merge(merge(complete_lists_per_week, taxa), all.y = TRUE) |>
  transform(n_records = replace(n_records, is.na(n_records), 0)) |>
  transform(reporting_rate = n_records / n_events)
```

Plot reporting rate changes over time for Cygnus cygnus.

```{r}
#| label: fig-reporting-rate
#| fig-cap: "Reporting rate of bird taxa over time"
reporting_rate_plot <- 
  ggplot(reporting_rates) +
  aes(
    as.Date(paste(year, week, 1), format = "%Y %W %u"),
    reporting_rate,
    col = Taxa
  ) +
  scale_color_grey(start = 0, end = 0) +
  geom_line() +
  xlab("Date") +
  ylab("Reporting rate")

ggplotly(reporting_rate_plot, tooltip = "colour", dynamicTicks = TRUE)
```
